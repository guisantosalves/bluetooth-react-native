// <auto-generated />
using System;
using Alpha.Pesagem.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Api.Pesagem.Migrations
{
    [DbContext(typeof(AlphaDbContext))]
    [Migration("20220923154007_T_AjustandoLos")]
    partial class T_AjustandoLos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Fazenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<short>("Inativo")
                        .HasColumnType("smallint");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<short>("Sincronizado")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Fazendas");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("FazendaId")
                        .HasColumnType("uuid");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<string>("Mensagem")
                        .HasColumnType("text");

                    b.Property<short>("Sincronizado")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Peso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brinco")
                        .HasColumnType("text");

                    b.Property<string>("BrincoEletronico")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("FazendaId")
                        .HasColumnType("uuid");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<string>("Idade")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("PesoTotal")
                        .HasColumnType("text");

                    b.Property<string>("Raca")
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<short>("Sincronizado")
                        .HasColumnType("smallint");

                    b.Property<string>("ValorMedio")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId");

                    b.ToTable("Peso");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("FazendaId")
                        .HasColumnType("uuid");

                    b.Property<short>("Sincronizado")
                        .HasColumnType("smallint");

                    b.Property<Guid>("Token")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FazendaId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Peso", b =>
                {
                    b.HasOne("Alpha.Pesagem.Api.Models.Fazenda", "Fazenda")
                        .WithMany()
                        .HasForeignKey("FazendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fazenda");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.RefreshToken", b =>
                {
                    b.HasOne("Alpha.Pesagem.Api.Models.Fazenda", "Fazenda")
                        .WithMany()
                        .HasForeignKey("FazendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fazenda");
                });
#pragma warning restore 612, 618
        }
    }
}
