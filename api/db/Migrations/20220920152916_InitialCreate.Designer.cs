// <auto-generated />
using System;
using Alpha.Pesagem.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Api.Pesagem.Migrations
{
    [DbContext(typeof(AlphaDbContext))]
    [Migration("20220920152916_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ImagemBase64")
                        .HasColumnType("text");

                    b.Property<bool>("Inativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apelido")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Aviso")
                        .HasColumnType("text");

                    b.Property<string>("Bairro")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Bloqueado")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Celular")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<int?>("CodigoIbgeCidade")
                        .HasColumnType("integer");

                    b.Property<string>("Complemento")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Contato")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<string>("Inativo")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<short>("Sincronizado")
                        .HasColumnType("smallint");

                    b.Property<string>("Telefone")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<short>("TipoPessoa")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("UsuarioAlteracaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Vendedores")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioAlteracaoId");

                    b.HasIndex("UsuarioCriacaoId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<string>("Mensagem")
                        .HasColumnType("text");

                    b.Property<Guid?>("UsuarioAlteracaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioAlteracaoId");

                    b.HasIndex("UsuarioCriacaoId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<int?>("IdAlphaExpress")
                        .HasColumnType("integer");

                    b.Property<short>("Inativo")
                        .HasColumnType("smallint");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Salto")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Senha")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Fornecedor", b =>
                {
                    b.HasOne("Alpha.Pesagem.Api.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alpha.Pesagem.Api.Usuario", "UsuarioAlteracao")
                        .WithMany()
                        .HasForeignKey("UsuarioAlteracaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Alpha.Pesagem.Api.Usuario", "UsuarioCriacao")
                        .WithMany()
                        .HasForeignKey("UsuarioCriacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("UsuarioAlteracao");

                    b.Navigation("UsuarioCriacao");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Models.Log", b =>
                {
                    b.HasOne("Alpha.Pesagem.Api.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alpha.Pesagem.Api.Usuario", "UsuarioAlteracao")
                        .WithMany()
                        .HasForeignKey("UsuarioAlteracaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Alpha.Pesagem.Api.Usuario", "UsuarioCriacao")
                        .WithMany()
                        .HasForeignKey("UsuarioCriacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");

                    b.Navigation("UsuarioAlteracao");

                    b.Navigation("UsuarioCriacao");
                });

            modelBuilder.Entity("Alpha.Pesagem.Api.Usuario", b =>
                {
                    b.HasOne("Alpha.Pesagem.Api.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
